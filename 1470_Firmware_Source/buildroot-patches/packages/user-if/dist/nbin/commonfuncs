#!/bin/sh
#
# bruce - NAS_NBIN is configured in lighttpd.conf
export NAS_NBIN="/usr/www/nbin"
export PATH=$PATH:$NAS_NBIN	# /usr/www/nbin
# bruce - These paths should now be configured by lighttpd
#export SMB_PATH="/usr/local/samba"
#export SMB_CONF="/etc/smb.conf"
#export SMB_PASSWD="/var/private/smbpasswd"
#export SHARES_HOME="/shares"
#export OXSEMI_HOME="/var/oxsemi"
export PERL5LIB=$PERL5LIB:/usr/www/lib

# Pull in the paths (generated by nasMaster.pl)
. $NAS_NBIN/setupPaths.sh

# Check environment variables exist
if [ -z "$NETWORK_SETTINGS" ] ; then
	echo NETWORK_SETTINGS not set >&2
	exit 1;
fi
if [ -z "$SMB_PATH" ] ; then
	echo SMB_PATH not set >&2
	exit 1;
fi
if [ -z "$SMB_CONF" ] ; then
	echo SMB_CONF not set >&2
	exit 1;
fi
if [ -z "$SMB_PASSWD" ] ; then
	echo SMB_PASSWD not set >&2
	exit 1;
fi
if [ -z "$SHARES_HOME" ] ; then
	echo SHARES_HOME not set >&2
	exit 1;
fi
if [ -z "$OXSEMI_HOME" ] ; then
	echo OXSEMI_HOME not set >&2
	exit 1;
fi
if [ -z "$PERL5LIB" ] ; then
	echo PERL5LIB not set >&2
	exit 1;
fi

# Helper functions
#
validate_ip () {

	IP=$1
	RET=$VALID

	if [[ "$IP" =~ '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' ]]
	then
		P1=`echo $IP|cut -f1 -d.`
		P2=`echo $IP|cut -f2 -d.`
		P3=`echo $IP|cut -f3 -d.`
		P4=`echo $IP|cut -f4 -d.`
		if 	[ $P1 -gt 255 ] ||
			[ $P2 -gt 255 ] ||
			[ $P3 -gt 255 ] ||
			[ $P4 -gt 255 ]
		then
			RET=$INVALID
	fi
	else
		RET=$INVALID
	fi

	return $RET

}

validate_netmask () {

	NM=$1
	RET=$VALID

	if [[ "$NM" =~ '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' ]]
	then
		P1=`echo $NM|cut -f1 -d.`
		P2=`echo $NM|cut -f2 -d.`
		P3=`echo $NM|cut -f3 -d.`
		P4=`echo $NM|cut -f4 -d.`
		if 	[ $P1 -gt 255 ] ||
			[ $P2 -gt 255 ] ||
			[ $P3 -gt 255 ] ||
			[ $P4 -gt 255 ]
		then
			RET=$INVALID
	fi
	else
		RET=$INVALID
	fi

	return $RET

}

# Outputs a 'task finished' page informing the user whether any changes were made or not to the
#	device
#
task_ended () {

	export TV_TITLE=$1
	export TV_SUB_TITLE=$2
	SUB_MENU=$3
	CHANGES=$4

	if [ "$CHANGES" == "Y" ]
	then
		makepage.sh changes_applied.tpl $SUB_MENU
	else
		makepage.sh no_changes_applied.tpl $SUB_MENU
	fi

}

# installs the file specified as target, with perms which difer from the 'default'
#
nas_install () {
	nas_install.sh $*
}

# Makes a patch file between the $1 file and its .inst version
#	saves the patch file in the 'oxsemi' partition for later reapplication.
#
save_changes () {

## No longer used...
#	EDITED_FILE=$1
#	FN=$(basename $EDITED_FILE)
#
#	if [ ! -f "$EDITED_FILE" ]
#	then
#		log_error "Can't access '$EDITED_FILE'"
#	else
#		sudo diff ${EDITED_FILE}.inst $EDITED_FILE > $OXSEMI_HOME/patch/${FN}
#	fi
	echo save_changes is deprecated... >&2

}

log_error () {
	logger -t nasadmin "NAS web i/f ERROR: $1"
}

#
#	Create patches for files updated when a user is added, deleted, or changes password
#
save_passwd_changes () {

	save_changes /etc/passwd
	save_changes /etc/group
	save_changes /etc/shadow

}

save_samba_passwd_changes () {

#	save_changes /usr/local/samba/private/smbpasswd
	save_changes $SMB_PASSWD

}

# Returns the number of file shares which are configured
#
share_count () {

	DIR=${OXSEMI_HOME}/samba
	return $(ls -1 $DIR/oxnas_share_sh*.inc 2>/dev/null|wc -l)

}
